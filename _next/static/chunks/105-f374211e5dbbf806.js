"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[105],{7105:function(e,t,o){o.d(t,{WalletProvider:function(){return h},O:function(){return w}});var n=o(7437),r=o(2265);class a{get provider(){return window.unisat}async connect(){if(!this.provider)throw Error("UNISAT Wallet is not installed. Please install it from https://unisat.io");try{let e=await this.provider.requestAccounts();if(!e||0===e.length)throw Error("No accounts found in UNISAT Wallet");return console.log("[UnisatPC] ✅ Connected to wallet:",e[0]),e}catch(e){if(e.message.includes("User rejected"))throw Error("User rejected the connection request");throw e}}async disconnect(){}async signMessage(e){if(!this.provider)throw Error("UNISAT Wallet is not connected");try{let t=await this.provider.signMessage(e);return console.log("[UnisatPC] ✅ Message signed"),t}catch(e){if(e.message.includes("User rejected"))throw Error("User rejected the signature request");throw e}}async getPublicKey(){if(!this.provider)throw Error("UNISAT Wallet is not connected");try{return await this.provider.getPublicKey()}catch(e){return console.warn("[UnisatPC] Failed to get public key:",e),""}}async signPsbt(e){if(!this.provider)throw Error("UNISAT Wallet is not connected");try{let t=await this.provider.signPsbt(e);return console.log("[UnisatPC] ✅ PSBT signed"),t}catch(e){if(e.message.includes("User rejected"))throw Error("User rejected the PSBT signature request");throw e}}constructor(){this.name="UNISAT",this.icon="bg-orange-500"}}class i{async connect(){console.log("[UnisatMobile] Starting wallet connection via deeplink...");let e=this.generateNonce();this.pendingNonce=e,localStorage.setItem("pending_wallet_nonce",e),localStorage.setItem("pending_wallet_action","connect");let t=this.getCallbackUrl(),o="unisat://request?method=connect&from=".concat(this.APP_NAME,"&nonce=").concat(e,"&callback=").concat(encodeURIComponent(t));return console.log("[UnisatMobile] Deeplink URL:",o),console.log("[UnisatMobile] Nonce:",e),console.log("[UnisatMobile] Callback URL:",t),window.location.href=o,this.waitForCallback(e,"connect")}async disconnect(){localStorage.removeItem("pending_wallet_nonce"),localStorage.removeItem("pending_wallet_action")}async signMessage(e){console.log("[UnisatMobile] Requesting signature via deeplink...");let t=this.generateNonce();this.pendingNonce=t,localStorage.setItem("pending_wallet_nonce",t),localStorage.setItem("pending_wallet_action","signMessage");let o=btoa(JSON.stringify([e,"ecdsa"])),n=this.getCallbackUrl(),r="unisat://request?method=signMessage&data=".concat(o,"&from=").concat(this.APP_NAME,"&nonce=").concat(t,"&callback=").concat(encodeURIComponent(n));return console.log("[UnisatMobile] Sign message deeplink:",r),window.location.href=r,await this.waitForCallback(t,"signMessage")}async getPublicKey(){return console.warn("[UnisatMobile] getPublicKey not supported on mobile, returning empty string"),""}async signPsbt(e){console.log("[UnisatMobile] Requesting PSBT signature via deeplink...");let t=this.generateNonce();this.pendingNonce=t,localStorage.setItem("pending_wallet_nonce",t),localStorage.setItem("pending_wallet_action","signPsbt");let o=btoa(JSON.stringify([e,{}])),n=this.getCallbackUrl(),r="unisat://request?method=signPsbt&data=".concat(o,"&from=").concat(this.APP_NAME,"&nonce=").concat(t,"&callback=").concat(encodeURIComponent(n));return console.log("[UnisatMobile] Sign PSBT deeplink:",r),window.location.href=r,await this.waitForCallback(t,"signPsbt")}async waitForCallback(e,t){return console.log("[UnisatMobile] Waiting for user to return from UniSat App..."),await this.waitForPageVisible(),console.log("[UnisatMobile] User returned to browser, starting polling..."),this.pollForResult(e,t)}waitForPageVisible(){return new Promise(e=>{if("visible"===document.visibilityState){e();return}let t=()=>{"visible"===document.visibilityState&&(document.removeEventListener("visibilitychange",t),e())};document.addEventListener("visibilitychange",t),setTimeout(()=>{document.removeEventListener("visibilitychange",t),e()},1e3)})}async pollForResult(e,t){for(let o=1;o<=this.MAX_POLL_ATTEMPTS;o++)try{console.log("[UnisatMobile] Polling attempt ".concat(o,"/").concat(this.MAX_POLL_ATTEMPTS,"..."));let n=await fetch("".concat("https://api-inner-test.bitwood.fun/api/v1","/wallet-callback/check?nonce=").concat(e)),r=await n.json();if(console.log("[UnisatMobile] Poll result:",r),r.success&&r.data){if(console.log("[UnisatMobile] ✅ Received wallet data from backend"),this.cleanup(),"connect"===t){if(!r.data.address)throw Error("No wallet address returned");return[r.data.address]}if("signMessage"===t||"signPsbt"===t){if(!r.data.signature)throw Error("No signature returned");return r.data.signature}throw Error("Unknown action type")}if(r.error)throw console.error("[UnisatMobile] ❌ Error from backend:",r.error),this.cleanup(),Error(r.error);if(r.pending){await this.sleep(this.POLL_INTERVAL);continue}await this.sleep(this.POLL_INTERVAL)}catch(e){if(console.error("[UnisatMobile] Polling error:",e),e.message&&!e.message.includes("fetch"))throw e;await this.sleep(this.POLL_INTERVAL)}throw this.cleanup(),Error("Wallet connection timeout. Please try again.")}generateNonce(){return"".concat(Date.now(),"_").concat(Math.random().toString(36).substring(2,15))}getCallbackUrl(){return"".concat("https://api-inner-test.bitwood.fun/api/v1","/wallet-callback")}sleep(e){return new Promise(t=>setTimeout(t,e))}cleanup(){localStorage.removeItem("pending_wallet_nonce"),localStorage.removeItem("pending_wallet_action")}constructor(){this.name="UNISAT",this.icon="bg-orange-500",this.pendingNonce=null,this.APP_NAME="BitWood",this.MAX_POLL_ATTEMPTS=30,this.POLL_INTERVAL=1e3}}class s{isMobileEnvironment(){let e=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),t=!!window.unisat;return console.log("[UnisatAdapter] Device detection:",{isMobileUserAgent:e,hasExtension:t,userAgent:navigator.userAgent.substring(0,50)+"..."}),e&&!t}async connect(){return this.adapter.connect()}async disconnect(){return this.adapter.disconnect()}async signMessage(e){return this.adapter.signMessage(e)}async getPublicKey(){return this.adapter.getPublicKey()}async signPsbt(e){return this.adapter.signPsbt(e)}constructor(){this.name="UNISAT",this.icon="bg-orange-500",this.isMobileEnvironment()?(console.log("[UnisatAdapter] \uD83D\uDCF1 Mobile environment detected, using mobile adapter (deeplink)"),this.adapter=new i):(console.log("[UnisatAdapter] \uD83D\uDCBB Desktop environment detected, using PC adapter (browser extension)"),this.adapter=new a)}}class l{get provider(){var e,t;let o=window;return(null===(e=o.okxwallet)||void 0===e?void 0:e.fractalBitcoin)||(null===(t=o.okxwallet)||void 0===t?void 0:t.bitcoin)}async connect(){let e=window;if(!e.okxwallet)throw Error("OKX Wallet is not installed. Please install it from https://www.okx.com/web3");try{var t;let o;if((null===(t=this.provider)||void 0===t?void 0:t.disconnect)&&await this.provider.disconnect(),e.okxwallet.fractalBitcoin)o=await e.okxwallet.fractalBitcoin.requestAccounts();else if(e.okxwallet.bitcoin)o=await e.okxwallet.bitcoin.requestAccounts();else throw Error("OKX Wallet Bitcoin support not found");if(!o||0===o.length)throw Error("No accounts found in OKX Wallet");return o}catch(e){if(e.message.includes("User rejected"))throw Error("User rejected the connection request");throw e}}async disconnect(){var e;(null===(e=this.provider)||void 0===e?void 0:e.disconnect)&&await this.provider.disconnect()}async signMessage(e){if(!this.provider)throw Error("OKX Wallet is not connected");try{return await this.provider.signMessage(e,"bip322-simple")}catch(e){if(e.message.includes("User rejected"))throw Error("User rejected the signature request");throw e}}async getPublicKey(){if(!this.provider)throw Error("OKX Wallet is not connected");try{return await this.provider.getPublicKey()}catch(e){return console.warn("Failed to get public key:",e),""}}constructor(){this.name="OKX Web3",this.icon="bg-purple-500"}}let c="https://api-inner-test.bitwood.fun/api/v1";class g{static getAuthHeaders(e){let t={"Content-Type":"application/json"};return e&&(t.Authorization="Bearer ".concat(e)),t}static async handleResponse(e){if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));return await e.json()}static async getMessage(){try{let e=await fetch("".concat(c,"/message"),{method:"GET",headers:this.getAuthHeaders()});return(await this.handleResponse(e)).data.message}catch(e){throw console.error("Failed to get message:",e),Error("Failed to get signing message")}}static async login(e){try{let t=await fetch("".concat(c,"/login"),{method:"POST",headers:this.getAuthHeaders(),body:JSON.stringify(e)});return await this.handleResponse(t)}catch(e){throw console.error("Login failed:",e),Error("Login failed")}}static async getProfile(e){try{let t=await fetch("".concat(c,"/profile"),{method:"GET",headers:this.getAuthHeaders(e)});return await this.handleResponse(t)}catch(e){throw console.error("Failed to get profile:",e),Error("Failed to get user profile")}}}let d=(0,r.createContext)(null),u={UNISAT:new s,OKX:new l};function h(e){let{children:t}=e;console.log("[WalletContext] WalletProvider initializing...");let[o,a]=(0,r.useState)(null),[i,s]=(0,r.useState)(!1),[l,c]=(0,r.useState)(!1),[h,w]=(0,r.useState)(null),[p,m]=(0,r.useState)(null),[b,f]=(0,r.useState)(()=>{let e=localStorage.getItem("authToken"),t="true"===localStorage.getItem("isLoggedIn"),o=t&&!!e;return console.log("[WalletContext] Initial isLoggedIn state:",{savedToken:e?e.substring(0,20)+"...":null,savedLoginState:t,initialValue:o}),o}),[y,v]=(0,r.useState)(null),[S,P]=(0,r.useState)(null),[U,k]=(0,r.useState)(!1),[E,I]=(0,r.useState)(!0),A=async e=>{try{s(!0);let t=u[e],o=await t.connect();o&&o.length>0&&(a(o[0]),c(!0),w(e),m(t),localStorage.setItem("walletConnected","true"),localStorage.setItem("walletAddress",o[0]),localStorage.setItem("walletType",e),await M(t,o[0]))}catch(e){throw console.error("Connection error:",e),alert(e.message||"Failed to connect wallet"),e}finally{s(!1)}},M=async(e,t)=>{try{k(!0);let o=await g.getMessage(),n="";try{e.getPublicKey&&(n=await e.getPublicKey())}catch(e){console.warn("Failed to get public key:",e)}let r=await e.signMessage(o),a=await g.login({sign:r,walletAddress:t,publicKey:n});if(0===a.errcode&&a.data){let{token:e,player:o}=a.data;if(!e)throw Error("Login response missing token");P(e),v(o||null),f(!0),localStorage.setItem("authToken",e),o&&localStorage.setItem("userData",JSON.stringify(o)),localStorage.setItem("isLoggedIn","true"),console.log("Login successful for:",t);let n=document.createElement("div");n.textContent="\uD83C\uDF89 Login successful!",n.className="fixed bottom-4 left-1/2 transform -translate-x-1/2 z-50 rpg-card !p-3 !bg-primary !text-primary-foreground font-bold",document.body.appendChild(n),setTimeout(()=>{n.parentNode&&document.body.removeChild(n)},3e3)}else throw Error("Login failed with error code: "+a.data.errcode)}catch(e){console.error("Login error:",e),alert("Login failed: "+(e.message||"Unknown error"))}finally{k(!1)}},T=async()=>{if(!p||!o)throw Error("Wallet not connected");await M(p,o)},C=()=>{f(!1),v(null),P(null),localStorage.removeItem("authToken"),localStorage.removeItem("userData"),localStorage.removeItem("isLoggedIn")},N=async e=>{if(!p||!l)throw Error("Wallet not connected");try{return await p.signMessage(e)}catch(e){throw console.error("Signing error:",e),e}};return(0,r.useEffect)(()=>{console.log("[WalletContext] useEffect starting...");let e="true"===localStorage.getItem("walletConnected"),t=localStorage.getItem("walletAddress"),o=localStorage.getItem("walletType");console.log("[WalletContext] Restoring wallet connection:",{isConnected:e,savedAddress:t?t.substring(0,10)+"...":null,savedType:o}),e&&t&&o&&(a(t),c(!0),w(o),m(u[o]));let n=localStorage.getItem("authToken"),r=localStorage.getItem("userData");if(console.log("[WalletContext] Restoring auth state:",{savedToken:n?n.substring(0,20)+"...":null,savedUserData:r?"exists":null}),n){if(P(n),f(!0),r&&"undefined"!==r&&"null"!==r)try{let e=JSON.parse(r);v(e),console.log("[WalletContext] ✅ Restored login session for:",e.wallet_address||"unknown")}catch(e){console.error("[WalletContext] ⚠️ Failed to parse user data, but token is valid:",e)}else console.log("[WalletContext] ✅ Restored login session with token (no user data)")}else console.log("[WalletContext] No saved token found, user not logged in");console.log("[WalletContext] Setting initializing to false"),I(!1)},[]),(0,n.jsx)(d.Provider,{value:{address:o,connecting:i,connected:l,walletType:h,isLoggedIn:b,user:y,token:S,logging:U,initializing:E,connect:A,disconnect:()=>{(null==p?void 0:p.disconnect)&&p.disconnect().catch(console.error),a(null),c(!1),w(null),m(null),localStorage.removeItem("walletConnected"),localStorage.removeItem("walletAddress"),localStorage.removeItem("walletType"),C()},signMessage:N,login:T,logout:C},children:t})}function w(){let e=(0,r.useContext)(d);if(!e)throw Error("useWallet must be used within WalletProvider");return e}}}]);